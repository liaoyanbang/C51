C51 COMPILER V9.60.0.0   IIC                                                               05/18/2021 15:21:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: D:\Keil_v5\44444444444\C51\BIN\C51.EXE iic.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          #include "iic.h"
   2           
   3          sbit SDA = P3^5;
   4          sbit SCL = P3^6;
   5          unsigned char ACK_flag = 0;
   6          
   7          
   8          
   9          void delay(unsigned int z)
  10          {
  11   1        unsigned int i;
  12   1        unsigned char j;
  13   1        for(i = z;i>0;i--)
  14   1          for(j =  114;j>0;j--);
  15   1      }
  16          
  17          /*  延时5微秒 */
  18          void delay_5us()
  19          {
  20   1        _nop_();
  21   1      }
  22           
  23          /*  I2C初始化 */
  24          void I2C_init()   
  25          {
  26   1        SCL = 1;        //拉高SDA和SCL
  27   1        delay_5us();  
  28   1        SDA = 1;    
  29   1        delay_5us();    
  30   1      }
  31           
  32          /*  I2C开始信号 */
  33          void I2C_Start()
  34          {
  35   1        SDA = 1;
  36   1        SCL = 1;       //打开时钟
  37   1        delay_5us();
  38   1        SDA = 0;       //产生SDA下降沿，触发开始信号
  39   1        delay_5us();
  40   1      }
  41           
  42          /*  I2C结束信号 */
  43          void I2C_Stop()
  44          {
  45   1        SCL = 0;
  46   1        SDA = 0;
  47   1        _nop_();
  48   1        SCL = 1;        //打开时钟
  49   1        delay_5us();
  50   1        SDA = 1;        //产生SDA上升沿，触发结束信号
  51   1        delay_5us();
  52   1      }
  53           
  54          /*  I2C数据发送 */
C51 COMPILER V9.60.0.0   IIC                                                               05/18/2021 15:21:08 PAGE 2   

  55          void I2C_Send(unsigned char byte)
  56          {
  57   1        unsigned char i,temp;
  58   1        temp = byte;
  59   1        for(i = 0;i<8;i++)
  60   1        {
  61   2          SCL = 0;    //关闭时钟准备数据变化
  62   2          if(temp & 0x80) //从最高位发送 1000 0000
  63   2          {
  64   3            SDA = 1;
  65   3          }
  66   2          else
  67   2          {
  68   3            SDA = 0;
  69   3          }
  70   2          delay_5us();
  71   2          SCL = 1;      //打开时钟发送数据
  72   2          delay_5us();
  73   2          temp <<= 1;
  74   2        }
  75   1      }
  76           
  77          /*  I2C数据接收 */
  78          unsigned char I2C_Get()
  79          {
  80   1        unsigned char i,byte;
  81   1        for(i = 0;i<8;i++)
  82   1        {
  83   2          SCL = 0;      //关闭时钟准备数据变化
  84   2          _nop_();
  85   2          SCL = 1;      //打开时钟接收数据
  86   2          delay_5us();
  87   2          if(SDA) byte++; //从最高位接收
  88   2          SCL = 0;    //接收完毕关闭时钟
  89   2          if(i == 7) return byte; 
  90   2          byte <<= 1;
  91   2        }
  92   1        return 0x50;    
  93   1      }
  94           
  95          /*  I2C主机应答 */
  96          void I2C_ACK_Send(bit A)
  97          {
  98   1        SCL = 0;
  99   1        _nop_();
 100   1        if(A)       //如果i = 1那么拉低数据总线，表示主机应答。
 101   1        {
 102   2          SDA = 0;
 103   2        }       //如果i = 0发送非应答
 104   1        else
 105   1        {
 106   2          SDA = 1;
 107   2        }
 108   1        delay_5us();
 109   1        SCL = 1;
 110   1        _nop_();
 111   1        SCL = 0;
 112   1        _nop_();
 113   1        SDA = 1;
 114   1        _nop_();
 115   1      }
 116          /*  I2C从机应答*/
C51 COMPILER V9.60.0.0   IIC                                                               05/18/2021 15:21:08 PAGE 3   

 117          bit I2C_ACK_Get()
 118          {
 119   1        bit flag;
 120   1        SCL = 0;
 121   1        SDA = 1;
 122   1        _nop_();
 123   1        SCL = 1;
 124   1        _nop_();
 125   1        flag = SDA;
 126   1        _nop_();
 127   1        SCL = 0;
 128   1        return flag; 
 129   1      }
 130           
 131          /*  写入段  */
 132          void I2C_Write(unsigned char add_7,unsigned char add,unsigned char byte)
 133          {
 134   1        I2C_Start();          //开始
 135   1        I2C_Send(add_7+0);        //写eeprom
 136   1        if(I2C_ACK_Get()) ACK_flag = 1;     //接收从机ACK
 137   1        I2C_Send(add);          //选择内存地址
 138   1        if(I2C_ACK_Get()) ACK_flag = 1;     //接收从机ACK
 139   1        I2C_Send(byte);         //写数据
 140   1        if(I2C_ACK_Get()) ACK_flag = 1;     //接收从机ACK
 141   1        I2C_Stop();         //主机停止
 142   1      }
 143          /*  读取段  */
 144          unsigned char I2C_Read(unsigned char add_7,unsigned char add)
 145          {
 146   1        unsigned char message;
 147   1        I2C_Start();          //开始
 148   1        I2C_Send(add_7+0);        //写eeprom
 149   1        if(I2C_ACK_Get()) ACK_flag = 1;     //接收从机ACK
 150   1        I2C_Send(add);          //选择内存地址
 151   1        if(I2C_ACK_Get()) ACK_flag = 1;     //接收从机ACK
 152   1       
 153   1        I2C_Start();          //重开始
 154   1        I2C_Send(add_7+1);        //读eeprom
 155   1        if(I2C_ACK_Get()) ACK_flag = 1;     //接收从机ACK
 156   1        message = I2C_Get();              //接收从机数据
 157   1        I2C_ACK_Send(0);        //主机发送ACK
 158   1        I2C_Stop();         //主机停止
 159   1        return message; 
 160   1      }
 161           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    299    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
